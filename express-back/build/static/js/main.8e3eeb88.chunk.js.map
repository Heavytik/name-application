{"version":3,"sources":["services/names.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","then","response","data","App","useState","names","setNames","order","setOrder","useEffect","nameService","backendData","isAplhabetical","ordering","mapper","name","amount","rowid","nameList","sort","n1","n2","map","totalNames","reduce","p","c","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAQe,EALA,WAEX,OADgBA,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCgE9BC,MAjEf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAIaF,mBAAS,YAJtB,mBAING,EAJM,KAICC,EAJD,KAMbC,qBAAU,WACRC,IAEGV,MAAK,SAAAW,GACJL,EAASK,QAEZ,IAEH,IAAMC,EAAiB,iBAAgB,iBAAVL,GAGvBM,EAAWD,IAAmB,YAAc,eAE5CE,EAAS,SAAAC,GAAI,OAAI,+BAAqB,6BAAKA,EAAKA,OAAU,6BAAKA,EAAKC,WAA1CD,EAAKE,QAE/BC,EAAqB,iBAAVX,EACf,YAAIF,GAAOc,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGL,KAAOM,EAAGN,QAAOO,IAAIR,GACpD,YAAIT,GAAOc,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGJ,OAASK,EAAGL,UAAQM,IAAIR,GAEnDS,EAAalB,EAAMmB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEV,SAAQ,GAExD,OACE,sBAAKW,UAAU,gBAAf,UAEE,wBAAQA,UAAU,aAAlB,SACE,oDAKF,sBAAKA,UAAU,cAAf,UACE,8BACE,kCACE,gCACE,+BACE,sCAAa,6CAGjB,gCACET,SAIN,8BACE,yBAAQU,QAlCI,kBAAMhB,IAAmBJ,EAAS,YAAcA,EAAS,iBAkCrE,uBAAyCK,EAAzC,iBAEF,gDACgBU,QAIlB,qBAAKI,UAAU,aAAf,SACE,4DClDOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8e3eeb88.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/names'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nexport default { getAll }","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport nameService from './services/names'\n\nfunction App() {\n\n  const [names, setNames] = useState([])\n  // alphabetical or quantity\n  const [order, setOrder] = useState(\"quantity\")\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(backendData => {\n        setNames(backendData)\n      })\n  }, [])\n\n  const isAplhabetical = () => order === \"alphabetical\"\n\n  const changeOrder = () => isAplhabetical() ? setOrder(\"quantity\") : setOrder(\"alphabetical\")\n  const ordering = isAplhabetical() ? \"quantical\" : \"aplhabetical\"\n\n  const mapper = name => <tr key={name.rowid}><td>{name.name}</td><td>{name.amount}</td></tr>\n\n  const nameList = order === \"alphabetical\" ?\n    [...names].sort((n1, n2) => n1.name > n2.name ).map(mapper) :\n    [...names].sort((n1, n2) => n1.amount < n2.amount).map(mapper)\n\n  const totalNames = names.reduce((p, c) => p + c.amount, 0)\n\n  return (\n    <div className=\"App-container\">\n\n      <header className=\"App-header\">\n        <h1>\n          Name Application\n        </h1>\n      </header>\n\n      <div className=\"App-content\">\n        <div>\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th><th>Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n            { nameList }\n            </tbody>\n          </table>\n        </div>\n        <div>\n          <button onClick={changeOrder}>Change to {ordering} ordering</button>\n        </div>\n        <div>\n          total names: {totalNames}\n        </div>\n      </div>\n\n      <div className=\"App-footer\">\n        <p>Mayde by Jere Tofferi</p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}